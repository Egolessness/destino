plugins {
    id 'java'
    id 'com.vanniktech.maven.publish' apply false
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'java-library'

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencies {
        constraints {
            api "org.slf4j:slf4j-api:${slf4jVersion}"
            api "org.apache.logging.log4j:log4j-core:${log4jVersion}"
            api "org.apache.logging.log4j:log4j-api:${log4jVersion}"
            api "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
            api "ch.qos.logback:logback-classic:${logbackVersion}"
            api "ch.qos.logback:logback-core:${logbackVersion}"

            api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
            api "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"

            api "org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}"
            api "commons-io:commons-io:${commonsioVersion}"
            api "commons-lang:commons-lang:${commonslangVersion}"
            api "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}"
            api "org.apache.commons:commons-text:${commonstextVersion}"
            api "com.google.code.findbugs:jsr305:${jsr305Version}"
            api "io.prometheus:simpleclient:${prometheusVersion}"
            api "net.jodah:typetools:${typetoolsVersion}"
            api "org.glassfish:jakarta.el:${jakartaelVersion}"
            api "net.openhft:affinity:${affinityVersion}"
            api "com.cronutils:cron-utils:${cronutilsVersion}"
            api "com.lmax:disruptor:${disruptorVersion}"

            api "org.rocksdb:rocksdbjni:${rocksdbVersion}"
            api "com.h2database:h2:${h2Version}"

            api "com.google.inject:guice:${guiceVersion}"
            api "com.alipay.sofa:hessian:${hessianVersion}"
            api "io.jsonwebtoken:jjwt-api:${jwtVersion}"
            api "io.jsonwebtoken:jjwt-impl:${jwtVersion}"
            api "com.alipay.sofa:jraft-core:${jraftVersion}"
            api "com.alipay.sofa:rpc-grpc-impl:${jraftVersion}"

            api "com.google.protobuf:protobuf-java:${protobufVersion}"
            api "com.lmax:disruptor:${disruptorVersion}"
            api "com.sun.mail:jakarta.mail:${jakartamailVersion}"
            api "com.linecorp.armeria:armeria:${armeriaVersion}"
            api "com.linecorp.armeria:armeria-grpc:${armeriaVersion}"
            api "io.grpc:grpc-api:${grpcVersion}"
            api "io.grpc:grpc-stub:${grpcVersion}"
            api "io.grpc:grpc-protobuf:${grpcVersion}"
            api "io.grpc:grpc-services:${grpcVersion}"
            api "io.grpc:grpc-netty:${grpcVersion}"
            api "io.grpc:grpc-netty-shaded:${grpcVersion}"
            api "org.apache.httpcomponents:httpasyncclient:${httpasyncclientVersion}"
        }
    }
}

jar {
    enabled false
}