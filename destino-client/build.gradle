dependencies {
    compileOnly "org.slf4j:slf4j-api:${slf4jVersion}"
    compileOnly "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    compileOnly "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    compileOnly "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    compileOnly "ch.qos.logback:logback-classic:${logbackVersion}"
    compileOnly "ch.qos.logback:logback-core:${logbackVersion}"
    compileOnly "com.google.code.findbugs:jsr305:${jsr305Version}"

    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation "io.prometheus:simpleclient:${prometheusVersion}"

    implementation project(":destino-common")

    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
}

jar {
    from {
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
        configurations.compileClasspath.files.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}