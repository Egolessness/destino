plugins {
    id 'com.github.johnrengelman.shadow'
}

dependencies {
    implementation libs.grpc.stub
    implementation libs.grpc.netty
    implementation libs.grpc.netty.shaded
    implementation libs.grpc.protobuf
    implementation libs.grpc.services
    implementation libs.guice

    implementation libs.jackson.databind
    implementation libs.jackson.dataformat.yaml
    implementation libs.hibernate.validator
    implementation libs.armeria
    implementation libs.armeria.grpc
    implementation libs.commons.io
    implementation libs.commons.lang
    implementation libs.commons.text
    implementation libs.log4j.core
    implementation libs.log4j.api
    implementation libs.log4j.slf4j.impl

    implementation project(":destino-core")
    implementation project(":destino-common")
    implementation project(":destino-grpc")
    implementation project(":destino-setting")
    implementation project(":destino-raft")
    implementation project(":destino-registration")
    implementation project(":destino-mandatory")
    implementation project(":destino-authentication")
    if (!project.hasProperty("no-scheduler")) {
        implementation project(":destino-scheduler")
    }
}

shadowJar {
    zip64 true
    archiveClassifier = null
    mergeServiceFiles()
    mergeServiceFiles("i18n")
    manifest {
        attributes 'Main-Class': 'org.egolessness.destino.server.DestinoApplication'
    }
}

processResources {
    if (project.hasProperty("prod")) {
        profiles = "prod"
    }
    if (project.hasProperty("cluster")) {
        serverMode = "cluster"
    }
    inputs.property('version', version)
    inputs.property('profiles', profiles)
    if (project.hasProperty("no-console")) {
        exclude("console/**")
    }
    filesMatching("**/application.yml") {
        filter {
            it.replace("#project.version#", version)
        }
        filter {
            it.replace("#destino.profiles.active#", profiles)
        }
        filter {
            it.replace("#server.mode#", serverMode)
        }
    }
}

jar {
    enabled false
}

compileJava.dependsOn processResources